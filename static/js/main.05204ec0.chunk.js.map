{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","sort","todoA","todoB","App","useState","setUser","setTitle","isSubmited","setSubmited","users","action","method","onSubmit","event","preventDefault","push","length","trim","Number","type","placeholder","value","onChange","target","replace","disabled","userItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05204ec0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    id,\n    user,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { ChangeEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer\n  .map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }))\n  .sort((todoA, todoB) => todoA.id - todoB.id);\n\nexport const App = () => {\n  const [user, setUser] = useState('0');\n  const [title, setTitle] = useState('');\n  const [isSubmited, setSubmited] = useState(false);\n\n  const users: User[] = usersFromServer;\n\n  const handleUserSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUser(event.target.value);\n  };\n\n  const handleTitleInput = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value.replace(/[^a-zA-Z0-9 ]/g, ''));\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title !== '' && user !== '0') {\n      todos.push({\n        id: todos[todos.length - 1].id + 1,\n        title: title.trim(),\n        completed: false,\n        userId: Number(user),\n        user: getUser(Number(user)),\n      });\n\n      setUser('0');\n      setTitle('');\n      setSubmited(false);\n    } else {\n      setSubmited(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleInput}\n            />\n          </label>\n          {\n            title === ''\n            && isSubmited\n            && <span className=\"error\">Please enter a title</span>\n          }\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={user}\n              onChange={handleUserSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {users.map(userItem => (\n                <option\n                  value={userItem.id}\n                  key={userItem.id}\n                >\n                  {userItem.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {\n            user === '0'\n            && isSubmited\n            && <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}